{"ast":null,"code":"var _jsxFileName = \"/Users/mukeshkapoor/projects/logbert_hadoop_rca/frontend/src/components/LogAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { Row, Col, Card, Form, Button, Alert, Spinner, Badge, Tabs, Tab } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport { FaUpload, FaSearch, FaFileAlt, FaCog } from 'react-icons/fa';\nimport { toast } from 'react-toastify';\nimport { apiService } from '../services/apiService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LogAnalysis = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState('text');\n  const [logText, setLogText] = useState('');\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n\n  // Analysis options\n  const [options, setOptions] = useState({\n    includeTimestamp: true,\n    parseLevel: 'INFO',\n    maxLines: 1000,\n    enablePreprocessing: true\n  });\n  const onDrop = useCallback(acceptedFiles => {\n    setUploadedFiles(acceptedFiles);\n    toast.success(`${acceptedFiles.length} file(s) uploaded successfully`);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'text/plain': ['.log', '.txt'],\n      'application/octet-stream': ['.log']\n    },\n    maxFiles: 5,\n    maxSize: 10 * 1024 * 1024 // 10MB\n  });\n  const analyzeText = async () => {\n    if (!logText.trim()) {\n      toast.error('Please enter some log content to analyze');\n      return;\n    }\n    setLoading(true);\n    try {\n      const result = await apiService.analyzeLogText(logText, options);\n      // Map mock/development response to UI expected structure if needed\n      let mappedResult = result;\n      if (result && result.anomaly_detection && result.root_cause_analysis) {\n        var _result$anomaly_detec, _result$anomaly_detec2, _result$root_cause_an, _result$root_cause_an2, _result$anomaly_detec3, _result$root_cause_an3, _result$root_cause_an4, _result$root_cause_an5, _result$root_cause_an6, _result$anomaly_detec4;\n        mappedResult = {\n          total_logs: ((_result$anomaly_detec = result.anomaly_detection.statistics) === null || _result$anomaly_detec === void 0 ? void 0 : _result$anomaly_detec.total_lines) || 0,\n          warnings: 0,\n          // Not available in mock, set to 0 or count from anomalies if needed\n          errors: result.anomaly_detection.total_anomalies || 0,\n          processing_time: result.anomaly_detection.processing_time_ms + ' ms',\n          parsed_logs: ((_result$anomaly_detec2 = result.anomaly_detection.anomalies) === null || _result$anomaly_detec2 === void 0 ? void 0 : _result$anomaly_detec2.map(a => {\n            var _a$anomaly_type;\n            return {\n              ...a,\n              level: ((_a$anomaly_type = a.anomaly_type) === null || _a$anomaly_type === void 0 ? void 0 : _a$anomaly_type.toUpperCase()) || 'ERROR',\n              message: a.log_entry,\n              timestamp: a.timestamp\n            };\n          })) || [],\n          summary: result.root_cause_analysis.analysis_summary || ((_result$root_cause_an = result.root_cause_analysis.root_causes) === null || _result$root_cause_an === void 0 ? void 0 : (_result$root_cause_an2 = _result$root_cause_an[0]) === null || _result$root_cause_an2 === void 0 ? void 0 : _result$root_cause_an2.description),\n          patterns: ((_result$anomaly_detec3 = result.anomaly_detection.anomalies) === null || _result$anomaly_detec3 === void 0 ? void 0 : _result$anomaly_detec3.map(a => a.anomaly_type).filter((v, i, arr) => arr.indexOf(v) === i)) || [],\n          root_cause: (_result$root_cause_an3 = result.root_cause_analysis.root_causes) === null || _result$root_cause_an3 === void 0 ? void 0 : (_result$root_cause_an4 = _result$root_cause_an3[0]) === null || _result$root_cause_an4 === void 0 ? void 0 : _result$root_cause_an4.title,\n          recommended_actions: (_result$root_cause_an5 = result.root_cause_analysis.root_causes) === null || _result$root_cause_an5 === void 0 ? void 0 : (_result$root_cause_an6 = _result$root_cause_an5[0]) === null || _result$root_cause_an6 === void 0 ? void 0 : _result$root_cause_an6.recommended_actions,\n          mock_mode: (_result$anomaly_detec4 = result.anomaly_detection.statistics) === null || _result$anomaly_detec4 === void 0 ? void 0 : _result$anomaly_detec4.mock_mode\n        };\n      }\n      setAnalysisResult(mappedResult);\n      toast.success('Log analysis completed successfully');\n    } catch (error) {\n      toast.error(`Analysis failed: ${error.message}`);\n      console.error('Analysis error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const analyzeFile = async () => {\n    if (uploadedFiles.length === 0) {\n      toast.error('Please upload a log file first');\n      return;\n    }\n    setLoading(true);\n    try {\n      const result = await apiService.analyzeLogFile(uploadedFiles[0], options);\n      setAnalysisResult(result);\n      toast.success('File analysis completed successfully');\n    } catch (error) {\n      toast.error(`File analysis failed: ${error.message}`);\n      console.error('File analysis error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const LogViewer = ({\n    logs\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-viewer\",\n    children: logs.map((log, index) => {\n      var _log$level;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `log-line ${((_log$level = log.level) === null || _log$level === void 0 ? void 0 : _log$level.toLowerCase()) || ''}`,\n        children: [log.timestamp && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted\",\n          children: [\"[\", log.timestamp, \"] \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this), log.level && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `badge bg-${getLevelColor(log.level)} me-2`,\n          children: log.level\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: log.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n  const getLevelColor = level => {\n    switch (level === null || level === void 0 ? void 0 : level.toUpperCase()) {\n      case 'ERROR':\n        return 'danger';\n      case 'WARN':\n      case 'WARNING':\n        return 'warning';\n      case 'INFO':\n        return 'info';\n      case 'DEBUG':\n        return 'secondary';\n      default:\n        return 'light';\n    }\n  };\n  const AnalysisResults = ({\n    result\n  }) => /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-0\",\n        children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n          className: \"me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), \"Analysis Results\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-primary\",\n                children: result.total_logs || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: \"Total Log Entries\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-warning\",\n                children: result.warnings || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: \"Warnings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-danger\",\n                children: result.errors || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: \"Errors\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-success\",\n                children: result.processing_time || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: \"Processing Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), result.parsed_logs && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Parsed Log Entries:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LogViewer, {\n          logs: result.parsed_logs.slice(0, 50)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), result.parsed_logs.length > 50 && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"info\",\n          className: \"mt-2\",\n          children: [\"Showing first 50 entries. Total: \", result.parsed_logs.length, \" entries.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), result.summary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Analysis Summary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"info\",\n          children: result.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), result.patterns && result.patterns.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Detected Patterns:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), result.patterns.map((pattern, index) => /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"secondary\",\n          className: \"me-2 mb-1\",\n          children: pattern\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n            className: \"me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), \"Log Analysis\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"Upload log files or paste log content for intelligent analysis using LogBERT AI models.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(Tabs, {\n              activeKey: activeTab,\n              onSelect: setActiveTab,\n              children: [/*#__PURE__*/_jsxDEV(Tab, {\n                eventKey: \"text\",\n                title: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(FaFileAlt, {\n                    className: \"me-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 47\n                  }, this), \"Text Input\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tab, {\n                eventKey: \"file\",\n                title: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(FaUpload, {\n                    className: \"me-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 47\n                  }, this), \"File Upload\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [activeTab === 'text' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Log Content\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  rows: 15,\n                  placeholder: \"Paste your log content here...\",\n                  value: logText,\n                  onChange: e => setLogText(e.target.value),\n                  style: {\n                    fontFamily: 'monospace',\n                    fontSize: '14px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: analyzeText,\n                disabled: loading || !logText.trim(),\n                children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                    animation: \"border\",\n                    size: \"sm\",\n                    className: \"me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 25\n                  }, this), \"Analyzing...\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n                    className: \"me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 25\n                  }, this), \"Analyze Text\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), activeTab === 'file' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                ...getRootProps(),\n                className: `upload-area ${isDragActive ? 'active' : ''}`,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  ...getInputProps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(FaUpload, {\n                  size: 48,\n                  className: \"text-muted mb-3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Drop log files here, or click to select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-muted\",\n                  children: \"Supports .log and .txt files up to 10MB each\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this), uploadedFiles.length > 0 && /*#__PURE__*/_jsxDEV(Alert, {\n                  variant: \"success\",\n                  className: \"mt-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Files ready for analysis:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: \"mb-0 mt-2\",\n                    children: uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [file.name, \" (\", (file.size / 1024).toFixed(1), \" KB)\"]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: analyzeFile,\n                disabled: loading || uploadedFiles.length === 0,\n                className: \"mt-3\",\n                children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                    animation: \"border\",\n                    size: \"sm\",\n                    className: \"me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 25\n                  }, this), \"Processing File...\"]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(FaSearch, {\n                    className: \"me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 25\n                  }, this), \"Analyze File\"]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"mb-0\",\n              children: [/*#__PURE__*/_jsxDEV(FaCog, {\n                className: \"me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this), \"Analysis Options\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Include timestamp parsing\",\n                  checked: options.includeTimestamp,\n                  onChange: e => setOptions(prev => ({\n                    ...prev,\n                    includeTimestamp: e.target.checked\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  label: \"Enable preprocessing\",\n                  checked: options.enablePreprocessing,\n                  onChange: e => setOptions(prev => ({\n                    ...prev,\n                    enablePreprocessing: e.target.checked\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Log Level Filter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  value: options.parseLevel,\n                  onChange: e => setOptions(prev => ({\n                    ...prev,\n                    parseLevel: e.target.value\n                  })),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"DEBUG\",\n                    children: \"DEBUG and above\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"INFO\",\n                    children: \"INFO and above\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"WARN\",\n                    children: \"WARN and above\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ERROR\",\n                    children: \"ERROR only\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Max Lines to Process\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  value: options.maxLines,\n                  onChange: e => setOptions(prev => ({\n                    ...prev,\n                    maxLines: parseInt(e.target.value) || 1000\n                  })),\n                  min: \"100\",\n                  max: \"10000\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), analysisResult && /*#__PURE__*/_jsxDEV(AnalysisResults, {\n      result: analysisResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(LogAnalysis, \"6P3bC9vteJitU+Rx/339aFlt5vI=\", false, function () {\n  return [useDropzone];\n});\n_c = LogAnalysis;\nexport default LogAnalysis;\nvar _c;\n$RefreshReg$(_c, \"LogAnalysis\");","map":{"version":3,"names":["React","useState","useCallback","Row","Col","Card","Form","Button","Alert","Spinner","Badge","Tabs","Tab","useDropzone","FaUpload","FaSearch","FaFileAlt","FaCog","toast","apiService","jsxDEV","_jsxDEV","Fragment","_Fragment","LogAnalysis","_s","activeTab","setActiveTab","logText","setLogText","analysisResult","setAnalysisResult","loading","setLoading","uploadedFiles","setUploadedFiles","options","setOptions","includeTimestamp","parseLevel","maxLines","enablePreprocessing","onDrop","acceptedFiles","success","length","getRootProps","getInputProps","isDragActive","accept","maxFiles","maxSize","analyzeText","trim","error","result","analyzeLogText","mappedResult","anomaly_detection","root_cause_analysis","_result$anomaly_detec","_result$anomaly_detec2","_result$root_cause_an","_result$root_cause_an2","_result$anomaly_detec3","_result$root_cause_an3","_result$root_cause_an4","_result$root_cause_an5","_result$root_cause_an6","_result$anomaly_detec4","total_logs","statistics","total_lines","warnings","errors","total_anomalies","processing_time","processing_time_ms","parsed_logs","anomalies","map","a","_a$anomaly_type","level","anomaly_type","toUpperCase","message","log_entry","timestamp","summary","analysis_summary","root_causes","description","patterns","filter","v","i","arr","indexOf","root_cause","title","recommended_actions","mock_mode","console","analyzeFile","analyzeLogFile","LogViewer","logs","className","children","log","index","_log$level","toLowerCase","fileName","_jsxFileName","lineNumber","columnNumber","getLevelColor","AnalysisResults","Header","Body","md","slice","variant","pattern","bg","lg","activeKey","onSelect","eventKey","Group","Label","Control","as","rows","placeholder","value","onChange","e","target","style","fontFamily","fontSize","onClick","disabled","animation","size","file","name","toFixed","Check","type","label","checked","prev","Select","parseInt","min","max","_c","$RefreshReg$"],"sources":["/Users/mukeshkapoor/projects/logbert_hadoop_rca/frontend/src/components/LogAnalysis.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Row, Col, Card, Form, Button, Alert, Spinner, Badge, Tabs, Tab } from 'react-bootstrap';\nimport { useDropzone } from 'react-dropzone';\nimport { FaUpload, FaSearch, FaFileAlt, FaCog } from 'react-icons/fa';\nimport { toast } from 'react-toastify';\nimport { apiService } from '../services/apiService';\n\nconst LogAnalysis = () => {\n  const [activeTab, setActiveTab] = useState('text');\n  const [logText, setLogText] = useState('');\n  const [analysisResult, setAnalysisResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  \n  // Analysis options\n  const [options, setOptions] = useState({\n    includeTimestamp: true,\n    parseLevel: 'INFO',\n    maxLines: 1000,\n    enablePreprocessing: true,\n  });\n\n  const onDrop = useCallback((acceptedFiles) => {\n    setUploadedFiles(acceptedFiles);\n    toast.success(`${acceptedFiles.length} file(s) uploaded successfully`);\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'text/plain': ['.log', '.txt'],\n      'application/octet-stream': ['.log']\n    },\n    maxFiles: 5,\n    maxSize: 10 * 1024 * 1024 // 10MB\n  });\n\n  const analyzeText = async () => {\n    if (!logText.trim()) {\n      toast.error('Please enter some log content to analyze');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const result = await apiService.analyzeLogText(logText, options);\n      // Map mock/development response to UI expected structure if needed\n      let mappedResult = result;\n      if (result && result.anomaly_detection && result.root_cause_analysis) {\n        mappedResult = {\n          total_logs: result.anomaly_detection.statistics?.total_lines || 0,\n          warnings: 0, // Not available in mock, set to 0 or count from anomalies if needed\n          errors: result.anomaly_detection.total_anomalies || 0,\n          processing_time: result.anomaly_detection.processing_time_ms + ' ms',\n          parsed_logs: result.anomaly_detection.anomalies?.map(a => ({\n            ...a,\n            level: a.anomaly_type?.toUpperCase() || 'ERROR',\n            message: a.log_entry,\n            timestamp: a.timestamp,\n          })) || [],\n          summary: result.root_cause_analysis.analysis_summary || result.root_cause_analysis.root_causes?.[0]?.description,\n          patterns: result.anomaly_detection.anomalies?.map(a => a.anomaly_type).filter((v, i, arr) => arr.indexOf(v) === i) || [],\n          root_cause: result.root_cause_analysis.root_causes?.[0]?.title,\n          recommended_actions: result.root_cause_analysis.root_causes?.[0]?.recommended_actions,\n          mock_mode: result.anomaly_detection.statistics?.mock_mode,\n        };\n      }\n      setAnalysisResult(mappedResult);\n      toast.success('Log analysis completed successfully');\n    } catch (error) {\n      toast.error(`Analysis failed: ${error.message}`);\n      console.error('Analysis error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const analyzeFile = async () => {\n    if (uploadedFiles.length === 0) {\n      toast.error('Please upload a log file first');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const result = await apiService.analyzeLogFile(uploadedFiles[0], options);\n      setAnalysisResult(result);\n      toast.success('File analysis completed successfully');\n    } catch (error) {\n      toast.error(`File analysis failed: ${error.message}`);\n      console.error('File analysis error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const LogViewer = ({ logs }) => (\n    <div className=\"log-viewer\">\n      {logs.map((log, index) => (\n        <div key={index} className={`log-line ${log.level?.toLowerCase() || ''}`}>\n          {log.timestamp && <span className=\"text-muted\">[{log.timestamp}] </span>}\n          {log.level && <span className={`badge bg-${getLevelColor(log.level)} me-2`}>{log.level}</span>}\n          <span>{log.message}</span>\n        </div>\n      ))}\n    </div>\n  );\n\n  const getLevelColor = (level) => {\n    switch (level?.toUpperCase()) {\n      case 'ERROR': return 'danger';\n      case 'WARN': case 'WARNING': return 'warning';\n      case 'INFO': return 'info';\n      case 'DEBUG': return 'secondary';\n      default: return 'light';\n    }\n  };\n\n  const AnalysisResults = ({ result }) => (\n    <Card className=\"mt-4\">\n      <Card.Header>\n        <h5 className=\"mb-0\">\n          <FaSearch className=\"me-2\" />\n          Analysis Results\n        </h5>\n      </Card.Header>\n      <Card.Body>\n        <Row className=\"mb-3\">\n          <Col md={3}>\n            <Card className=\"text-center\">\n              <Card.Body>\n                <h4 className=\"text-primary\">{result.total_logs || 0}</h4>\n                <small className=\"text-muted\">Total Log Entries</small>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={3}>\n            <Card className=\"text-center\">\n              <Card.Body>\n                <h4 className=\"text-warning\">{result.warnings || 0}</h4>\n                <small className=\"text-muted\">Warnings</small>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={3}>\n            <Card className=\"text-center\">\n              <Card.Body>\n                <h4 className=\"text-danger\">{result.errors || 0}</h4>\n                <small className=\"text-muted\">Errors</small>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={3}>\n            <Card className=\"text-center\">\n              <Card.Body>\n                <h4 className=\"text-success\">{result.processing_time || 'N/A'}</h4>\n                <small className=\"text-muted\">Processing Time</small>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n\n        {result.parsed_logs && (\n          <div>\n            <h6>Parsed Log Entries:</h6>\n            <LogViewer logs={result.parsed_logs.slice(0, 50)} />\n            {result.parsed_logs.length > 50 && (\n              <Alert variant=\"info\" className=\"mt-2\">\n                Showing first 50 entries. Total: {result.parsed_logs.length} entries.\n              </Alert>\n            )}\n          </div>\n        )}\n\n        {result.summary && (\n          <div className=\"mt-4\">\n            <h6>Analysis Summary:</h6>\n            <Alert variant=\"info\">\n              {result.summary}\n            </Alert>\n          </div>\n        )}\n\n        {result.patterns && result.patterns.length > 0 && (\n          <div className=\"mt-4\">\n            <h6>Detected Patterns:</h6>\n            {result.patterns.map((pattern, index) => (\n              <Badge key={index} bg=\"secondary\" className=\"me-2 mb-1\">\n                {pattern}\n              </Badge>\n            ))}\n          </div>\n        )}\n      </Card.Body>\n    </Card>\n  );\n\n  return (\n    <div>\n      <Row className=\"mb-4\">\n        <Col>\n          <h2>\n            <FaSearch className=\"me-2\" />\n            Log Analysis\n          </h2>\n          <p className=\"text-muted\">\n            Upload log files or paste log content for intelligent analysis using LogBERT AI models.\n          </p>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg={8}>\n          <Card>\n            <Card.Header>\n              <Tabs activeKey={activeTab} onSelect={setActiveTab}>\n                <Tab eventKey=\"text\" title={<><FaFileAlt className=\"me-1\" />Text Input</>} />\n                <Tab eventKey=\"file\" title={<><FaUpload className=\"me-1\" />File Upload</>} />\n              </Tabs>\n            </Card.Header>\n            <Card.Body>\n              {activeTab === 'text' && (\n                <div>\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>Log Content</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      rows={15}\n                      placeholder=\"Paste your log content here...\"\n                      value={logText}\n                      onChange={(e) => setLogText(e.target.value)}\n                      style={{ fontFamily: 'monospace', fontSize: '14px' }}\n                    />\n                  </Form.Group>\n                  <Button \n                    variant=\"primary\" \n                    onClick={analyzeText}\n                    disabled={loading || !logText.trim()}\n                  >\n                    {loading ? (\n                      <>\n                        <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\n                        Analyzing...\n                      </>\n                    ) : (\n                      <>\n                        <FaSearch className=\"me-2\" />\n                        Analyze Text\n                      </>\n                    )}\n                  </Button>\n                </div>\n              )}\n\n              {activeTab === 'file' && (\n                <div>\n                  <div {...getRootProps()} className={`upload-area ${isDragActive ? 'active' : ''}`}>\n                    <input {...getInputProps()} />\n                    <FaUpload size={48} className=\"text-muted mb-3\" />\n                    <h5>Drop log files here, or click to select</h5>\n                    <p className=\"text-muted\">\n                      Supports .log and .txt files up to 10MB each\n                    </p>\n                    {uploadedFiles.length > 0 && (\n                      <Alert variant=\"success\" className=\"mt-3\">\n                        <strong>Files ready for analysis:</strong>\n                        <ul className=\"mb-0 mt-2\">\n                          {uploadedFiles.map((file, index) => (\n                            <li key={index}>{file.name} ({(file.size / 1024).toFixed(1)} KB)</li>\n                          ))}\n                        </ul>\n                      </Alert>\n                    )}\n                  </div>\n                  \n                  <Button \n                    variant=\"primary\" \n                    onClick={analyzeFile}\n                    disabled={loading || uploadedFiles.length === 0}\n                    className=\"mt-3\"\n                  >\n                    {loading ? (\n                      <>\n                        <Spinner animation=\"border\" size=\"sm\" className=\"me-2\" />\n                        Processing File...\n                      </>\n                    ) : (\n                      <>\n                        <FaSearch className=\"me-2\" />\n                        Analyze File\n                      </>\n                    )}\n                  </Button>\n                </div>\n              )}\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col lg={4}>\n          <Card>\n            <Card.Header>\n              <h6 className=\"mb-0\">\n                <FaCog className=\"me-2\" />\n                Analysis Options\n              </h6>\n            </Card.Header>\n            <Card.Body>\n              <Form>\n                <Form.Group className=\"mb-3\">\n                  <Form.Check\n                    type=\"checkbox\"\n                    label=\"Include timestamp parsing\"\n                    checked={options.includeTimestamp}\n                    onChange={(e) => setOptions(prev => ({ ...prev, includeTimestamp: e.target.checked }))}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Check\n                    type=\"checkbox\"\n                    label=\"Enable preprocessing\"\n                    checked={options.enablePreprocessing}\n                    onChange={(e) => setOptions(prev => ({ ...prev, enablePreprocessing: e.target.checked }))}\n                  />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Log Level Filter</Form.Label>\n                  <Form.Select\n                    value={options.parseLevel}\n                    onChange={(e) => setOptions(prev => ({ ...prev, parseLevel: e.target.value }))}\n                  >\n                    <option value=\"DEBUG\">DEBUG and above</option>\n                    <option value=\"INFO\">INFO and above</option>\n                    <option value=\"WARN\">WARN and above</option>\n                    <option value=\"ERROR\">ERROR only</option>\n                  </Form.Select>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                  <Form.Label>Max Lines to Process</Form.Label>\n                  <Form.Control\n                    type=\"number\"\n                    value={options.maxLines}\n                    onChange={(e) => setOptions(prev => ({ ...prev, maxLines: parseInt(e.target.value) || 1000 }))}\n                    min=\"100\"\n                    max=\"10000\"\n                  />\n                </Form.Group>\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      {analysisResult && <AnalysisResults result={analysisResult} />}\n    </div>\n  );\n};\n\nexport default LogAnalysis;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}