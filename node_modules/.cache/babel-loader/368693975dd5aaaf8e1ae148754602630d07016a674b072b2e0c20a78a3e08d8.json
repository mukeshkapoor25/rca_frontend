{"ast":null,"code":"var _jsxFileName = \"/Users/mukeshkapoor/projects/logbert_hadoop_rca-bk/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\n// Components\nimport Navigation from './components/Navigation';\nimport Dashboard from './components/Dashboard';\nimport UploadLogFile from './components/UploadLogFile';\nimport RCALatestCard from './components/RCALatestCard';\nimport Chatbot from './components/Chatbot';\n\n// Services\nimport { apiService } from './services/apiService';\nimport { getAPIHealthStatus } from './api/health';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [apiHealth, setApiHealth] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [agentsStatus, setAgentsStatus] = useState({});\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    // Initial data fetch\n    checkApiHealth();\n    fetchAgentsStatus();\n\n    // Set up periodic checks\n    const healthInterval = setInterval(checkApiHealth, 30000);\n    const agentsInterval = setInterval(fetchAgentsStatus, 10000);\n    return () => {\n      clearInterval(healthInterval);\n      clearInterval(agentsInterval);\n    };\n  }, []);\n  const checkApiHealth = async () => {\n    try {\n      const health = await getAPIHealthStatus();\n      setApiHealth(health);\n      setIsConnected(health === 'healthy');\n    } catch (error) {\n      console.error('API health check failed:', error);\n      setIsConnected(false);\n      setApiHealth(null);\n    }\n  };\n  const fetchAgentsStatus = async () => {\n    try {\n      const status = await apiService.getAgentsStatus();\n      setAgentsStatus(status);\n    } catch (error) {\n      console.error('Failed to fetch agents status:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      isConnected: isConnected,\n      agentsStatus: agentsStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"py-4\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {\n            apiHealth: apiHealth,\n            isConnected: isConnected,\n            agentsStatus: agentsStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/upload\",\n          element: /*#__PURE__*/_jsxDEV(UploadLogFile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/rca-results\",\n          element: /*#__PURE__*/_jsxDEV(RCALatestCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chatbot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TVOWtWv3n/p49JOUlUSL4f+/WNs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Container","Navigation","Dashboard","UploadLogFile","RCALatestCard","Chatbot","apiService","getAPIHealthStatus","jsxDEV","_jsxDEV","App","_s","apiHealth","setApiHealth","isConnected","setIsConnected","agentsStatus","setAgentsStatus","socket","setSocket","checkApiHealth","fetchAgentsStatus","healthInterval","setInterval","agentsInterval","clearInterval","health","error","console","status","getAgentsStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fluid","path","element","_c","$RefreshReg$"],"sources":["/Users/mukeshkapoor/projects/logbert_hadoop_rca-bk/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\n// Components\nimport Navigation from './components/Navigation';\nimport Dashboard from './components/Dashboard';\nimport UploadLogFile from './components/UploadLogFile';\nimport RCALatestCard from './components/RCALatestCard';\nimport Chatbot from './components/Chatbot';\n\n// Services\nimport { apiService } from './services/apiService';\nimport { getAPIHealthStatus } from './api/health';\n\nfunction App() {\n  const [apiHealth, setApiHealth] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [agentsStatus, setAgentsStatus] = useState({});\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    // Initial data fetch\n    checkApiHealth();\n    fetchAgentsStatus();\n\n    // Set up periodic checks\n    const healthInterval = setInterval(checkApiHealth, 30000);\n    const agentsInterval = setInterval(fetchAgentsStatus, 10000);\n\n    return () => {\n      clearInterval(healthInterval);\n      clearInterval(agentsInterval);\n    };\n  }, []);\n\n  const checkApiHealth = async () => {\n    try {\n      const health = await getAPIHealthStatus();\n      setApiHealth(health);\n      setIsConnected(health === 'healthy');\n    } catch (error) {\n      console.error('API health check failed:', error);\n      setIsConnected(false);\n      setApiHealth(null);\n    }\n  };\n\n  const fetchAgentsStatus = async () => {\n    try {\n      const status = await apiService.getAgentsStatus();\n      setAgentsStatus(status);\n    } catch (error) {\n      console.error('Failed to fetch agents status:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Navigation isConnected={isConnected} agentsStatus={agentsStatus} />\n      <Container fluid className=\"py-4\">\n        <Routes>\n          <Route \n            path=\"/\" \n            element={\n              <Dashboard \n                apiHealth={apiHealth} \n                isConnected={isConnected}\n                agentsStatus={agentsStatus}\n              />\n            } \n          />\n           \n          <Route \n            path=\"/upload\" \n            element={<UploadLogFile />} \n          />\n          <Route \n            path=\"/rca-results\" \n            element={<RCALatestCard />} \n          />\n          {/* Removed: AgentsManagement, RealTimeStream, SystemHealth routes */}\n        </Routes>\n      </Container>\n      <Chatbot />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}