{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Row,Col,Card,Badge,Alert}from'react-bootstrap';import{FaRobot,FaChartLine,FaExclamationTriangle,FaServer,FaClock}from'react-icons/fa';import{LineChart,Line,XAxis,YAxis,CartesianGrid,Tooltip,ResponsiveContainer}from'recharts';import{apiService}from'../services/apiService';import UploadLogFile from'./UploadLogFile';import RCALatestCard from'./RCALatestCard';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Dashboard=_ref=>{var _systemStats$totalAna,_systemStats$totalAna2,_systemStats$anomalie,_systemStats$anomalie2,_systemStats$rcaPerfo,_systemStats$rcaPerfo2;let{apiHealth,isConnected}=_ref;const[systemStats,setSystemStats]=useState({totalAnalyzed:0,anomaliesDetected:0,rcaPerformed:0,uptime:'0:00:00'});const[recentActivity,setRecentActivity]=useState([]);const[performanceData,setPerformanceData]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchDashboardData=async()=>{setLoading(true);setError(null);try{// Use correct backend endpoints\nconst statsRes=await apiService.get('/metrics/summary');const activityRes=await apiService.get('/activity/recent');// Map backend fields to frontend state\nconst stats=statsRes.data||{};setSystemStats({totalAnalyzed:stats.totalAnalyses||0,anomaliesDetected:stats.totalAnomalies||0,rcaPerformed:stats.totalRootCauses||0,uptime:stats.timestamp||''});// Map activity to expected format for UI\nsetRecentActivity((activityRes.data||[]).map(item=>({action:item.description||item.type,time:item.timestamp?new Date(item.timestamp).toLocaleTimeString():'',status:'completed',duration:''})));// No performance endpoint; optionally use stats/systemHealth as a placeholder\nsetPerformanceData([]);}catch(err){setError('Failed to fetch dashboard data.');}finally{setLoading(false);}};fetchDashboardData();// Optionally, poll every 30s\nconst interval=setInterval(fetchDashboardData,30000);return()=>clearInterval(interval);},[]);const MetricCard=_ref2=>{let{title,value,icon,color=\"primary\",subtitle}=_ref2;return/*#__PURE__*/_jsx(Card,{className:\"card-hover h-100\",children:/*#__PURE__*/_jsxs(Card.Body,{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:`text-${color} mb-3`,style:{fontSize:'2rem'},children:icon}),/*#__PURE__*/_jsx(\"h3\",{className:\"mb-1\",children:value}),/*#__PURE__*/_jsx(\"h6\",{className:\"text-muted\",children:title}),subtitle&&/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:subtitle})]})});};return/*#__PURE__*/_jsx(\"div\",{children:loading?/*#__PURE__*/_jsx(Alert,{variant:\"info\",className:\"mb-4\",children:\"Loading dashboard data...\"}):error?/*#__PURE__*/_jsx(Alert,{variant:\"danger\",className:\"mb-4\",children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[isConnected?/*#__PURE__*/_jsx(Alert,{variant:\"success\",className:\"mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"status-indicator status-online\"}),/*#__PURE__*/_jsx(\"strong\",{children:\"System Operational\"}),\" - All AI agents are running normally\"]})}):/*#__PURE__*/_jsx(Alert,{variant:\"danger\",className:\"mb-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex align-items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"status-indicator status-offline\"}),/*#__PURE__*/_jsx(\"strong\",{children:\"System Offline\"}),\" - Unable to connect to the API backend\"]})}),/*#__PURE__*/_jsxs(Row,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(MetricCard,{title:\"Logs Analyzed\",value:((_systemStats$totalAna=systemStats.totalAnalyzed)===null||_systemStats$totalAna===void 0?void 0:(_systemStats$totalAna2=_systemStats$totalAna.toLocaleString)===null||_systemStats$totalAna2===void 0?void 0:_systemStats$totalAna2.call(_systemStats$totalAna))||0,icon:/*#__PURE__*/_jsx(FaChartLine,{}),color:\"success\",subtitle:\"Total processed\"})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(MetricCard,{title:\"Anomalies Detected\",value:((_systemStats$anomalie=systemStats.anomaliesDetected)===null||_systemStats$anomalie===void 0?void 0:(_systemStats$anomalie2=_systemStats$anomalie.toLocaleString)===null||_systemStats$anomalie2===void 0?void 0:_systemStats$anomalie2.call(_systemStats$anomalie))||0,icon:/*#__PURE__*/_jsx(FaExclamationTriangle,{}),color:\"warning\",subtitle:\"Potential issues found\"})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(MetricCard,{title:\"RCA Performed\",value:((_systemStats$rcaPerfo=systemStats.rcaPerformed)===null||_systemStats$rcaPerfo===void 0?void 0:(_systemStats$rcaPerfo2=_systemStats$rcaPerfo.toLocaleString)===null||_systemStats$rcaPerfo2===void 0?void 0:_systemStats$rcaPerfo2.call(_systemStats$rcaPerfo))||0,icon:/*#__PURE__*/_jsx(FaRobot,{}),color:\"info\",subtitle:\"Root cause analyses\"})}),/*#__PURE__*/_jsx(Col,{md:3,children:/*#__PURE__*/_jsx(MetricCard,{title:\"System Uptime\",value:(apiHealth===null||apiHealth===void 0?void 0:apiHealth.uptime)||systemStats.uptime||\"N/A\",icon:/*#__PURE__*/_jsx(FaClock,{}),color:\"primary\",subtitle:\"Current session\"})})]}),/*#__PURE__*/_jsxs(Row,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Col,{lg:8,children:/*#__PURE__*/_jsxs(Card,{className:\"h-100\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(FaChartLine,{className:\"me-2\"}),\"System Performance\"]})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(LineChart,{data:performanceData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"responses\",stroke:\"#28a745\",strokeWidth:2,name:\"Successful Responses\"}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:\"errors\",stroke:\"#dc3545\",strokeWidth:2,name:\"Errors\"})]})})})]})}),/*#__PURE__*/_jsx(Col,{lg:4,children:/*#__PURE__*/_jsxs(Card,{className:\"h-100\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(FaClock,{className:\"me-2\"}),\"Recent Activity\"]})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsx(\"div\",{style:{maxHeight:'300px',overflowY:'auto'},children:recentActivity.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"text-muted\",children:\"No recent activity.\"}):recentActivity.map((activity,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between align-items-center mb-3 pb-2 border-bottom\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"fw-semibold\",children:activity.action}),/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:activity.time})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-end\",children:[/*#__PURE__*/_jsx(Badge,{bg:activity.status==='completed'?'success':'warning',children:activity.status}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"small\",{className:\"text-muted\",children:activity.duration})})]})]},index))})})]})})]}),/*#__PURE__*/_jsxs(Row,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsx(UploadLogFile,{})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsx(RCALatestCard,{})})]}),apiHealth&&/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsxs(\"h5\",{className:\"mb-0\",children:[/*#__PURE__*/_jsx(FaServer,{className:\"me-2\"}),\"API Health Status\"]})}),/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(\"h6\",{children:\"System Information\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-unstyled\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Version:\"}),\" \",apiHealth.version||'N/A']}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),\" \",/*#__PURE__*/_jsx(Badge,{bg:\"success\",children:apiHealth.status||'Unknown'})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Database:\"}),\" \",/*#__PURE__*/_jsx(Badge,{bg:apiHealth.database?'success':'warning',children:apiHealth.database?'Connected':'Not Available'})]})]})]}),/*#__PURE__*/_jsxs(Col,{md:6,children:[/*#__PURE__*/_jsx(\"h6\",{children:\"AI Agents Status\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-unstyled\",children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(FaRobot,{className:\"me-2\"}),/*#__PURE__*/_jsx(\"strong\",{children:\"LogBERT Model:\"}),/*#__PURE__*/_jsx(Badge,{bg:\"success\",className:\"ms-2\",children:\"Active\"})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(FaExclamationTriangle,{className:\"me-2\"}),/*#__PURE__*/_jsx(\"strong\",{children:\"Anomaly Detector:\"}),/*#__PURE__*/_jsx(Badge,{bg:\"success\",className:\"ms-2\",children:\"Active\"})]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(FaChartLine,{className:\"me-2\"}),/*#__PURE__*/_jsx(\"strong\",{children:\"RCA Agent:\"}),/*#__PURE__*/_jsx(Badge,{bg:\"success\",className:\"ms-2\",children:\"Active\"})]})]})]})]})})]})})})]})});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","Row","Col","Card","Badge","Alert","FaRobot","FaChartLine","FaExclamationTriangle","FaServer","FaClock","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","apiService","UploadLogFile","RCALatestCard","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Dashboard","_ref","_systemStats$totalAna","_systemStats$totalAna2","_systemStats$anomalie","_systemStats$anomalie2","_systemStats$rcaPerfo","_systemStats$rcaPerfo2","apiHealth","isConnected","systemStats","setSystemStats","totalAnalyzed","anomaliesDetected","rcaPerformed","uptime","recentActivity","setRecentActivity","performanceData","setPerformanceData","loading","setLoading","error","setError","fetchDashboardData","statsRes","get","activityRes","stats","data","totalAnalyses","totalAnomalies","totalRootCauses","timestamp","map","item","action","description","type","time","Date","toLocaleTimeString","status","duration","err","interval","setInterval","clearInterval","MetricCard","_ref2","title","value","icon","color","subtitle","className","children","Body","style","fontSize","variant","md","toLocaleString","call","lg","Header","width","height","strokeDasharray","dataKey","stroke","strokeWidth","name","maxHeight","overflowY","length","activity","index","bg","version","database"],"sources":["/Users/mukeshkapoor/projects/logbert_hadoop_rca-bk/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Row, Col, Card, Badge, Alert } from 'react-bootstrap';\nimport { FaRobot, FaChartLine, FaExclamationTriangle, FaServer, FaClock } from 'react-icons/fa';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { apiService } from '../services/apiService';\nimport UploadLogFile from './UploadLogFile';\nimport RCALatestCard from './RCALatestCard';\n\nconst Dashboard = ({ apiHealth, isConnected }) => {\n  const [systemStats, setSystemStats] = useState({\n    totalAnalyzed: 0,\n    anomaliesDetected: 0,\n    rcaPerformed: 0,\n    uptime: '0:00:00',\n  });\n  const [recentActivity, setRecentActivity] = useState([]);\n  const [performanceData, setPerformanceData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Use correct backend endpoints\n        const statsRes = await apiService.get('/metrics/summary');\n        const activityRes = await apiService.get('/activity/recent');\n        // Map backend fields to frontend state\n        const stats = statsRes.data || {};\n        setSystemStats({\n          totalAnalyzed: stats.totalAnalyses || 0,\n          anomaliesDetected: stats.totalAnomalies || 0,\n          rcaPerformed: stats.totalRootCauses || 0,\n          uptime: stats.timestamp || '',\n        });\n        // Map activity to expected format for UI\n        setRecentActivity((activityRes.data || []).map(item => ({\n          action: item.description || item.type,\n          time: item.timestamp ? new Date(item.timestamp).toLocaleTimeString() : '',\n          status: 'completed',\n          duration: '',\n        })));\n        // No performance endpoint; optionally use stats/systemHealth as a placeholder\n        setPerformanceData([]);\n      } catch (err) {\n        setError('Failed to fetch dashboard data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDashboardData();\n    // Optionally, poll every 30s\n    const interval = setInterval(fetchDashboardData, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const MetricCard = ({ title, value, icon, color = \"primary\", subtitle }) => (\n    <Card className=\"card-hover h-100\">\n      <Card.Body className=\"text-center\">\n        <div className={`text-${color} mb-3`} style={{ fontSize: '2rem' }}>\n          {icon}\n        </div>\n        <h3 className=\"mb-1\">{value}</h3>\n        <h6 className=\"text-muted\">{title}</h6>\n        {subtitle && <small className=\"text-muted\">{subtitle}</small>}\n      </Card.Body>\n    </Card>\n  );\n\n  return (\n    <div>\n      {loading ? (\n        <Alert variant=\"info\" className=\"mb-4\">Loading dashboard data...</Alert>\n      ) : error ? (\n        <Alert variant=\"danger\" className=\"mb-4\">{error}</Alert>\n      ) : (\n        <>\n          {/* Status Alert */}\n          {isConnected ? (\n            <Alert variant=\"success\" className=\"mb-4\">\n              <div className=\"d-flex align-items-center\">\n                <div className=\"status-indicator status-online\"></div>\n                <strong>System Operational</strong> - All AI agents are running normally\n              </div>\n            </Alert>\n          ) : (\n            <Alert variant=\"danger\" className=\"mb-4\">\n              <div className=\"d-flex align-items-center\">\n                <div className=\"status-indicator status-offline\"></div>\n                <strong>System Offline</strong> - Unable to connect to the API backend\n              </div>\n            </Alert>\n          )}\n\n          {/* Main Metrics */}\n          <Row className=\"mb-4\">\n            <Col md={3}>\n              <MetricCard\n                title=\"Logs Analyzed\"\n                value={systemStats.totalAnalyzed?.toLocaleString?.() || 0}\n                icon={<FaChartLine />}\n                color=\"success\"\n                subtitle=\"Total processed\"\n              />\n            </Col>\n            <Col md={3}>\n              <MetricCard\n                title=\"Anomalies Detected\"\n                value={systemStats.anomaliesDetected?.toLocaleString?.() || 0}\n                icon={<FaExclamationTriangle />}\n                color=\"warning\"\n                subtitle=\"Potential issues found\"\n              />\n            </Col>\n            <Col md={3}>\n              <MetricCard\n                title=\"RCA Performed\"\n                value={systemStats.rcaPerformed?.toLocaleString?.() || 0}\n                icon={<FaRobot />}\n                color=\"info\"\n                subtitle=\"Root cause analyses\"\n              />\n            </Col>\n            <Col md={3}>\n              <MetricCard\n                title=\"System Uptime\"\n                value={apiHealth?.uptime || systemStats.uptime || \"N/A\"}\n                icon={<FaClock />}\n                color=\"primary\"\n                subtitle=\"Current session\"\n              />\n            </Col>\n          </Row>\n\n          {/* Charts and Activity */}\n          <Row className=\"mb-4\">\n            <Col lg={8}>\n              <Card className=\"h-100\">\n                <Card.Header>\n                  <h5 className=\"mb-0\">\n                    <FaChartLine className=\"me-2\" />\n                    System Performance\n                  </h5>\n                </Card.Header>\n                <Card.Body>\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <LineChart data={performanceData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"name\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Line \n                        type=\"monotone\" \n                        dataKey=\"responses\" \n                        stroke=\"#28a745\" \n                        strokeWidth={2}\n                        name=\"Successful Responses\"\n                      />\n                      <Line \n                        type=\"monotone\" \n                        dataKey=\"errors\" \n                        stroke=\"#dc3545\" \n                        strokeWidth={2}\n                        name=\"Errors\"\n                      />\n                    </LineChart>\n                  </ResponsiveContainer>\n                </Card.Body>\n              </Card>\n            </Col>\n            <Col lg={4}>\n              <Card className=\"h-100\">\n                <Card.Header>\n                  <h5 className=\"mb-0\">\n                    <FaClock className=\"me-2\" />\n                    Recent Activity\n                  </h5>\n                </Card.Header>\n                <Card.Body>\n                  <div style={{ maxHeight: '300px', overflowY: 'auto' }}>\n                    {recentActivity.length === 0 ? (\n                      <div className=\"text-muted\">No recent activity.</div>\n                    ) : (\n                      recentActivity.map((activity, index) => (\n                        <div key={index} className=\"d-flex justify-content-between align-items-center mb-3 pb-2 border-bottom\">\n                          <div>\n                            <div className=\"fw-semibold\">{activity.action}</div>\n                            <small className=\"text-muted\">{activity.time}</small>\n                          </div>\n                          <div className=\"text-end\">\n                            <Badge bg={activity.status === 'completed' ? 'success' : 'warning'}>\n                              {activity.status}\n                            </Badge>\n                            <div>\n                              <small className=\"text-muted\">{activity.duration}</small>\n                            </div>\n                          </div>\n                        </div>\n                      ))\n                    )}\n                  </div>\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n\n          {/* Log File Upload & RCA Table */}\n          <Row className=\"mb-4\">\n            <Col md={6}>\n              <UploadLogFile />\n            </Col>\n            <Col md={6}>\n              <RCALatestCard />\n            </Col>\n          </Row>\n\n          {/* API Health Details */}\n          {apiHealth && (\n            <Row>\n              <Col>\n                <Card>\n                  <Card.Header>\n                    <h5 className=\"mb-0\">\n                      <FaServer className=\"me-2\" />\n                      API Health Status\n                    </h5>\n                  </Card.Header>\n                  <Card.Body>\n                    <Row>\n                      <Col md={6}>\n                        <h6>System Information</h6>\n                        <ul className=\"list-unstyled\">\n                          <li><strong>Version:</strong> {apiHealth.version || 'N/A'}</li>\n                          <li><strong>Status:</strong> <Badge bg=\"success\">{apiHealth.status || 'Unknown'}</Badge></li>\n                          <li><strong>Database:</strong> <Badge bg={apiHealth.database ? 'success' : 'warning'}>\n                            {apiHealth.database ? 'Connected' : 'Not Available'}\n                          </Badge></li>\n                        </ul>\n                      </Col>\n                      <Col md={6}>\n                        <h6>AI Agents Status</h6>\n                        <ul className=\"list-unstyled\">\n                          <li>\n                            <FaRobot className=\"me-2\" />\n                            <strong>LogBERT Model:</strong> \n                            <Badge bg=\"success\" className=\"ms-2\">Active</Badge>\n                          </li>\n                          <li>\n                            <FaExclamationTriangle className=\"me-2\" />\n                            <strong>Anomaly Detector:</strong> \n                            <Badge bg=\"success\" className=\"ms-2\">Active</Badge>\n                          </li>\n                          <li>\n                            <FaChartLine className=\"me-2\" />\n                            <strong>RCA Agent:</strong> \n                            <Badge bg=\"success\" className=\"ms-2\">Active</Badge>\n                          </li>\n                        </ul>\n                      </Col>\n                    </Row>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,GAAG,CAAEC,GAAG,CAAEC,IAAI,CAAEC,KAAK,CAAEC,KAAK,KAAQ,iBAAiB,CAC9D,OAASC,OAAO,CAAEC,WAAW,CAAEC,qBAAqB,CAAEC,QAAQ,CAAEC,OAAO,KAAQ,gBAAgB,CAC/F,OAASC,SAAS,CAAEC,IAAI,CAAEC,KAAK,CAAEC,KAAK,CAAEC,aAAa,CAAEC,OAAO,CAAEC,mBAAmB,KAAQ,UAAU,CACrG,OAASC,UAAU,KAAQ,wBAAwB,CACnD,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAE5C,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAgC,KAAAC,qBAAA,CAAAC,sBAAA,CAAAC,qBAAA,CAAAC,sBAAA,CAAAC,qBAAA,CAAAC,sBAAA,IAA/B,CAAEC,SAAS,CAAEC,WAAY,CAAC,CAAAR,IAAA,CAC3C,KAAM,CAACS,WAAW,CAAEC,cAAc,CAAC,CAAGvC,QAAQ,CAAC,CAC7CwC,aAAa,CAAE,CAAC,CAChBC,iBAAiB,CAAE,CAAC,CACpBC,YAAY,CAAE,CAAC,CACfC,MAAM,CAAE,SACV,CAAC,CAAC,CACF,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAG7C,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAAC8C,eAAe,CAAEC,kBAAkB,CAAC,CAAG/C,QAAQ,CAAC,EAAE,CAAC,CAC1D,KAAM,CAACgD,OAAO,CAAEC,UAAU,CAAC,CAAGjD,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACkD,KAAK,CAAEC,QAAQ,CAAC,CAAGnD,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmD,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrCH,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CACd,GAAI,CACF;AACA,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAlC,UAAU,CAACmC,GAAG,CAAC,kBAAkB,CAAC,CACzD,KAAM,CAAAC,WAAW,CAAG,KAAM,CAAApC,UAAU,CAACmC,GAAG,CAAC,kBAAkB,CAAC,CAC5D;AACA,KAAM,CAAAE,KAAK,CAAGH,QAAQ,CAACI,IAAI,EAAI,CAAC,CAAC,CACjClB,cAAc,CAAC,CACbC,aAAa,CAAEgB,KAAK,CAACE,aAAa,EAAI,CAAC,CACvCjB,iBAAiB,CAAEe,KAAK,CAACG,cAAc,EAAI,CAAC,CAC5CjB,YAAY,CAAEc,KAAK,CAACI,eAAe,EAAI,CAAC,CACxCjB,MAAM,CAAEa,KAAK,CAACK,SAAS,EAAI,EAC7B,CAAC,CAAC,CACF;AACAhB,iBAAiB,CAAC,CAACU,WAAW,CAACE,IAAI,EAAI,EAAE,EAAEK,GAAG,CAACC,IAAI,GAAK,CACtDC,MAAM,CAAED,IAAI,CAACE,WAAW,EAAIF,IAAI,CAACG,IAAI,CACrCC,IAAI,CAAEJ,IAAI,CAACF,SAAS,CAAG,GAAI,CAAAO,IAAI,CAACL,IAAI,CAACF,SAAS,CAAC,CAACQ,kBAAkB,CAAC,CAAC,CAAG,EAAE,CACzEC,MAAM,CAAE,WAAW,CACnBC,QAAQ,CAAE,EACZ,CAAC,CAAC,CAAC,CAAC,CACJ;AACAxB,kBAAkB,CAAC,EAAE,CAAC,CACxB,CAAE,MAAOyB,GAAG,CAAE,CACZrB,QAAQ,CAAC,iCAAiC,CAAC,CAC7C,CAAC,OAAS,CACRF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CACDG,kBAAkB,CAAC,CAAC,CACpB;AACA,KAAM,CAAAqB,QAAQ,CAAGC,WAAW,CAACtB,kBAAkB,CAAE,KAAK,CAAC,CACvD,MAAO,IAAMuB,aAAa,CAACF,QAAQ,CAAC,CACtC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,UAAU,CAAGC,KAAA,MAAC,CAAEC,KAAK,CAAEC,KAAK,CAAEC,IAAI,CAAEC,KAAK,CAAG,SAAS,CAAEC,QAAS,CAAC,CAAAL,KAAA,oBACrEtD,IAAA,CAACnB,IAAI,EAAC+E,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAChC3D,KAAA,CAACrB,IAAI,CAACiF,IAAI,EAACF,SAAS,CAAC,aAAa,CAAAC,QAAA,eAChC7D,IAAA,QAAK4D,SAAS,CAAE,QAAQF,KAAK,OAAQ,CAACK,KAAK,CAAE,CAAEC,QAAQ,CAAE,MAAO,CAAE,CAAAH,QAAA,CAC/DJ,IAAI,CACF,CAAC,cACNzD,IAAA,OAAI4D,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAEL,KAAK,CAAK,CAAC,cACjCxD,IAAA,OAAI4D,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEN,KAAK,CAAK,CAAC,CACtCI,QAAQ,eAAI3D,IAAA,UAAO4D,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEF,QAAQ,CAAQ,CAAC,EACpD,CAAC,CACR,CAAC,EACR,CAED,mBACE3D,IAAA,QAAA6D,QAAA,CACGpC,OAAO,cACNzB,IAAA,CAACjB,KAAK,EAACkF,OAAO,CAAC,MAAM,CAACL,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,2BAAyB,CAAO,CAAC,CACtElC,KAAK,cACP3B,IAAA,CAACjB,KAAK,EAACkF,OAAO,CAAC,QAAQ,CAACL,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAElC,KAAK,CAAQ,CAAC,cAExDzB,KAAA,CAAAE,SAAA,EAAAyD,QAAA,EAEG/C,WAAW,cACVd,IAAA,CAACjB,KAAK,EAACkF,OAAO,CAAC,SAAS,CAACL,SAAS,CAAC,MAAM,CAAAC,QAAA,cACvC3D,KAAA,QAAK0D,SAAS,CAAC,2BAA2B,CAAAC,QAAA,eACxC7D,IAAA,QAAK4D,SAAS,CAAC,gCAAgC,CAAM,CAAC,cACtD5D,IAAA,WAAA6D,QAAA,CAAQ,oBAAkB,CAAQ,CAAC,wCACrC,EAAK,CAAC,CACD,CAAC,cAER7D,IAAA,CAACjB,KAAK,EAACkF,OAAO,CAAC,QAAQ,CAACL,SAAS,CAAC,MAAM,CAAAC,QAAA,cACtC3D,KAAA,QAAK0D,SAAS,CAAC,2BAA2B,CAAAC,QAAA,eACxC7D,IAAA,QAAK4D,SAAS,CAAC,iCAAiC,CAAM,CAAC,cACvD5D,IAAA,WAAA6D,QAAA,CAAQ,gBAAc,CAAQ,CAAC,0CACjC,EAAK,CAAC,CACD,CACR,cAGD3D,KAAA,CAACvB,GAAG,EAACiF,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnB7D,IAAA,CAACpB,GAAG,EAACsF,EAAE,CAAE,CAAE,CAAAL,QAAA,cACT7D,IAAA,CAACqD,UAAU,EACTE,KAAK,CAAC,eAAe,CACrBC,KAAK,CAAE,EAAAjD,qBAAA,CAAAQ,WAAW,CAACE,aAAa,UAAAV,qBAAA,kBAAAC,sBAAA,CAAzBD,qBAAA,CAA2B4D,cAAc,UAAA3D,sBAAA,iBAAzCA,sBAAA,CAAA4D,IAAA,CAAA7D,qBAA4C,CAAC,GAAI,CAAE,CAC1DkD,IAAI,cAAEzD,IAAA,CAACf,WAAW,GAAE,CAAE,CACtByE,KAAK,CAAC,SAAS,CACfC,QAAQ,CAAC,iBAAiB,CAC3B,CAAC,CACC,CAAC,cACN3D,IAAA,CAACpB,GAAG,EAACsF,EAAE,CAAE,CAAE,CAAAL,QAAA,cACT7D,IAAA,CAACqD,UAAU,EACTE,KAAK,CAAC,oBAAoB,CAC1BC,KAAK,CAAE,EAAA/C,qBAAA,CAAAM,WAAW,CAACG,iBAAiB,UAAAT,qBAAA,kBAAAC,sBAAA,CAA7BD,qBAAA,CAA+B0D,cAAc,UAAAzD,sBAAA,iBAA7CA,sBAAA,CAAA0D,IAAA,CAAA3D,qBAAgD,CAAC,GAAI,CAAE,CAC9DgD,IAAI,cAAEzD,IAAA,CAACd,qBAAqB,GAAE,CAAE,CAChCwE,KAAK,CAAC,SAAS,CACfC,QAAQ,CAAC,wBAAwB,CAClC,CAAC,CACC,CAAC,cACN3D,IAAA,CAACpB,GAAG,EAACsF,EAAE,CAAE,CAAE,CAAAL,QAAA,cACT7D,IAAA,CAACqD,UAAU,EACTE,KAAK,CAAC,eAAe,CACrBC,KAAK,CAAE,EAAA7C,qBAAA,CAAAI,WAAW,CAACI,YAAY,UAAAR,qBAAA,kBAAAC,sBAAA,CAAxBD,qBAAA,CAA0BwD,cAAc,UAAAvD,sBAAA,iBAAxCA,sBAAA,CAAAwD,IAAA,CAAAzD,qBAA2C,CAAC,GAAI,CAAE,CACzD8C,IAAI,cAAEzD,IAAA,CAAChB,OAAO,GAAE,CAAE,CAClB0E,KAAK,CAAC,MAAM,CACZC,QAAQ,CAAC,qBAAqB,CAC/B,CAAC,CACC,CAAC,cACN3D,IAAA,CAACpB,GAAG,EAACsF,EAAE,CAAE,CAAE,CAAAL,QAAA,cACT7D,IAAA,CAACqD,UAAU,EACTE,KAAK,CAAC,eAAe,CACrBC,KAAK,CAAE,CAAA3C,SAAS,SAATA,SAAS,iBAATA,SAAS,CAAEO,MAAM,GAAIL,WAAW,CAACK,MAAM,EAAI,KAAM,CACxDqC,IAAI,cAAEzD,IAAA,CAACZ,OAAO,GAAE,CAAE,CAClBsE,KAAK,CAAC,SAAS,CACfC,QAAQ,CAAC,iBAAiB,CAC3B,CAAC,CACC,CAAC,EACH,CAAC,cAGNzD,KAAA,CAACvB,GAAG,EAACiF,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnB7D,IAAA,CAACpB,GAAG,EAACyF,EAAE,CAAE,CAAE,CAAAR,QAAA,cACT3D,KAAA,CAACrB,IAAI,EAAC+E,SAAS,CAAC,OAAO,CAAAC,QAAA,eACrB7D,IAAA,CAACnB,IAAI,CAACyF,MAAM,EAAAT,QAAA,cACV3D,KAAA,OAAI0D,SAAS,CAAC,MAAM,CAAAC,QAAA,eAClB7D,IAAA,CAACf,WAAW,EAAC2E,SAAS,CAAC,MAAM,CAAE,CAAC,qBAElC,EAAI,CAAC,CACM,CAAC,cACd5D,IAAA,CAACnB,IAAI,CAACiF,IAAI,EAAAD,QAAA,cACR7D,IAAA,CAACL,mBAAmB,EAAC4E,KAAK,CAAC,MAAM,CAACC,MAAM,CAAE,GAAI,CAAAX,QAAA,cAC5C3D,KAAA,CAACb,SAAS,EAAC6C,IAAI,CAAEX,eAAgB,CAAAsC,QAAA,eAC/B7D,IAAA,CAACP,aAAa,EAACgF,eAAe,CAAC,KAAK,CAAE,CAAC,cACvCzE,IAAA,CAACT,KAAK,EAACmF,OAAO,CAAC,MAAM,CAAE,CAAC,cACxB1E,IAAA,CAACR,KAAK,GAAE,CAAC,cACTQ,IAAA,CAACN,OAAO,GAAE,CAAC,cACXM,IAAA,CAACV,IAAI,EACHqD,IAAI,CAAC,UAAU,CACf+B,OAAO,CAAC,WAAW,CACnBC,MAAM,CAAC,SAAS,CAChBC,WAAW,CAAE,CAAE,CACfC,IAAI,CAAC,sBAAsB,CAC5B,CAAC,cACF7E,IAAA,CAACV,IAAI,EACHqD,IAAI,CAAC,UAAU,CACf+B,OAAO,CAAC,QAAQ,CAChBC,MAAM,CAAC,SAAS,CAChBC,WAAW,CAAE,CAAE,CACfC,IAAI,CAAC,QAAQ,CACd,CAAC,EACO,CAAC,CACO,CAAC,CACb,CAAC,EACR,CAAC,CACJ,CAAC,cACN7E,IAAA,CAACpB,GAAG,EAACyF,EAAE,CAAE,CAAE,CAAAR,QAAA,cACT3D,KAAA,CAACrB,IAAI,EAAC+E,SAAS,CAAC,OAAO,CAAAC,QAAA,eACrB7D,IAAA,CAACnB,IAAI,CAACyF,MAAM,EAAAT,QAAA,cACV3D,KAAA,OAAI0D,SAAS,CAAC,MAAM,CAAAC,QAAA,eAClB7D,IAAA,CAACZ,OAAO,EAACwE,SAAS,CAAC,MAAM,CAAE,CAAC,kBAE9B,EAAI,CAAC,CACM,CAAC,cACd5D,IAAA,CAACnB,IAAI,CAACiF,IAAI,EAAAD,QAAA,cACR7D,IAAA,QAAK+D,KAAK,CAAE,CAAEe,SAAS,CAAE,OAAO,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAlB,QAAA,CACnDxC,cAAc,CAAC2D,MAAM,GAAK,CAAC,cAC1BhF,IAAA,QAAK4D,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,qBAAmB,CAAK,CAAC,CAErDxC,cAAc,CAACkB,GAAG,CAAC,CAAC0C,QAAQ,CAAEC,KAAK,gBACjChF,KAAA,QAAiB0D,SAAS,CAAC,2EAA2E,CAAAC,QAAA,eACpG3D,KAAA,QAAA2D,QAAA,eACE7D,IAAA,QAAK4D,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAEoB,QAAQ,CAACxC,MAAM,CAAM,CAAC,cACpDzC,IAAA,UAAO4D,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEoB,QAAQ,CAACrC,IAAI,CAAQ,CAAC,EAClD,CAAC,cACN1C,KAAA,QAAK0D,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvB7D,IAAA,CAAClB,KAAK,EAACqG,EAAE,CAAEF,QAAQ,CAAClC,MAAM,GAAK,WAAW,CAAG,SAAS,CAAG,SAAU,CAAAc,QAAA,CAChEoB,QAAQ,CAAClC,MAAM,CACX,CAAC,cACR/C,IAAA,QAAA6D,QAAA,cACE7D,IAAA,UAAO4D,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEoB,QAAQ,CAACjC,QAAQ,CAAQ,CAAC,CACtD,CAAC,EACH,CAAC,GAZEkC,KAaL,CACN,CACF,CACE,CAAC,CACG,CAAC,EACR,CAAC,CACJ,CAAC,EACH,CAAC,cAGNhF,KAAA,CAACvB,GAAG,EAACiF,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnB7D,IAAA,CAACpB,GAAG,EAACsF,EAAE,CAAE,CAAE,CAAAL,QAAA,cACT7D,IAAA,CAACH,aAAa,GAAE,CAAC,CACd,CAAC,cACNG,IAAA,CAACpB,GAAG,EAACsF,EAAE,CAAE,CAAE,CAAAL,QAAA,cACT7D,IAAA,CAACF,aAAa,GAAE,CAAC,CACd,CAAC,EACH,CAAC,CAGLe,SAAS,eACRb,IAAA,CAACrB,GAAG,EAAAkF,QAAA,cACF7D,IAAA,CAACpB,GAAG,EAAAiF,QAAA,cACF3D,KAAA,CAACrB,IAAI,EAAAgF,QAAA,eACH7D,IAAA,CAACnB,IAAI,CAACyF,MAAM,EAAAT,QAAA,cACV3D,KAAA,OAAI0D,SAAS,CAAC,MAAM,CAAAC,QAAA,eAClB7D,IAAA,CAACb,QAAQ,EAACyE,SAAS,CAAC,MAAM,CAAE,CAAC,oBAE/B,EAAI,CAAC,CACM,CAAC,cACd5D,IAAA,CAACnB,IAAI,CAACiF,IAAI,EAAAD,QAAA,cACR3D,KAAA,CAACvB,GAAG,EAAAkF,QAAA,eACF3D,KAAA,CAACtB,GAAG,EAACsF,EAAE,CAAE,CAAE,CAAAL,QAAA,eACT7D,IAAA,OAAA6D,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3B3D,KAAA,OAAI0D,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC3B3D,KAAA,OAAA2D,QAAA,eAAI7D,IAAA,WAAA6D,QAAA,CAAQ,UAAQ,CAAQ,CAAC,IAAC,CAAChD,SAAS,CAACuE,OAAO,EAAI,KAAK,EAAK,CAAC,cAC/DlF,KAAA,OAAA2D,QAAA,eAAI7D,IAAA,WAAA6D,QAAA,CAAQ,SAAO,CAAQ,CAAC,IAAC,cAAA7D,IAAA,CAAClB,KAAK,EAACqG,EAAE,CAAC,SAAS,CAAAtB,QAAA,CAAEhD,SAAS,CAACkC,MAAM,EAAI,SAAS,CAAQ,CAAC,EAAI,CAAC,cAC7F7C,KAAA,OAAA2D,QAAA,eAAI7D,IAAA,WAAA6D,QAAA,CAAQ,WAAS,CAAQ,CAAC,IAAC,cAAA7D,IAAA,CAAClB,KAAK,EAACqG,EAAE,CAAEtE,SAAS,CAACwE,QAAQ,CAAG,SAAS,CAAG,SAAU,CAAAxB,QAAA,CAClFhD,SAAS,CAACwE,QAAQ,CAAG,WAAW,CAAG,eAAe,CAC9C,CAAC,EAAI,CAAC,EACX,CAAC,EACF,CAAC,cACNnF,KAAA,CAACtB,GAAG,EAACsF,EAAE,CAAE,CAAE,CAAAL,QAAA,eACT7D,IAAA,OAAA6D,QAAA,CAAI,kBAAgB,CAAI,CAAC,cACzB3D,KAAA,OAAI0D,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC3B3D,KAAA,OAAA2D,QAAA,eACE7D,IAAA,CAAChB,OAAO,EAAC4E,SAAS,CAAC,MAAM,CAAE,CAAC,cAC5B5D,IAAA,WAAA6D,QAAA,CAAQ,gBAAc,CAAQ,CAAC,cAC/B7D,IAAA,CAAClB,KAAK,EAACqG,EAAE,CAAC,SAAS,CAACvB,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,QAAM,CAAO,CAAC,EACjD,CAAC,cACL3D,KAAA,OAAA2D,QAAA,eACE7D,IAAA,CAACd,qBAAqB,EAAC0E,SAAS,CAAC,MAAM,CAAE,CAAC,cAC1C5D,IAAA,WAAA6D,QAAA,CAAQ,mBAAiB,CAAQ,CAAC,cAClC7D,IAAA,CAAClB,KAAK,EAACqG,EAAE,CAAC,SAAS,CAACvB,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,QAAM,CAAO,CAAC,EACjD,CAAC,cACL3D,KAAA,OAAA2D,QAAA,eACE7D,IAAA,CAACf,WAAW,EAAC2E,SAAS,CAAC,MAAM,CAAE,CAAC,cAChC5D,IAAA,WAAA6D,QAAA,CAAQ,YAAU,CAAQ,CAAC,cAC3B7D,IAAA,CAAClB,KAAK,EAACqG,EAAE,CAAC,SAAS,CAACvB,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAC,QAAM,CAAO,CAAC,EACjD,CAAC,EACH,CAAC,EACF,CAAC,EACH,CAAC,CACG,CAAC,EACR,CAAC,CACJ,CAAC,CACH,CACN,EACD,CACH,CACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAxD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}