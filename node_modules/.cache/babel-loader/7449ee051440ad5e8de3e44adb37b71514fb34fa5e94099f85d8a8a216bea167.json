{"ast":null,"code":"var _jsxFileName = \"/Users/mukeshkapoor/projects/logbert_hadoop_rca-bk/frontend/src/components/UploadLogFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, Button, Form, Spinner, Alert } from 'react-bootstrap';\nimport { uploadLogFile } from '../api/upload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadLogFile = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [feedback, setFeedback] = useState(null);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n    setFeedback(null);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) return;\n    setUploading(true);\n    const result = await uploadLogFile(selectedFile);\n    setFeedback(result);\n    setUploading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-4\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"Upload Log File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formFile\",\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Select .log or .txt file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            accept: \".log,.txt\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleUpload,\n          disabled: !selectedFile || uploading,\n          children: uploading ? /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            size: \"sm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 26\n          }, this) : 'Upload'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), feedback && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: feedback.success ? 'success' : 'danger',\n        className: \"mt-3\",\n        children: feedback.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadLogFile, \"EbYiYjKlv8Yi77dRi7/Zv7m5vIY=\");\n_c = UploadLogFile;\nexport default UploadLogFile;\nvar _c;\n$RefreshReg$(_c, \"UploadLogFile\");","map":{"version":3,"names":["React","useState","Card","Button","Form","Spinner","Alert","uploadLogFile","jsxDEV","_jsxDEV","UploadLogFile","_s","selectedFile","setSelectedFile","uploading","setUploading","feedback","setFeedback","handleFileChange","e","target","files","handleUpload","result","className","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","accept","onChange","variant","onClick","disabled","animation","size","success","message","_c","$RefreshReg$"],"sources":["/Users/mukeshkapoor/projects/logbert_hadoop_rca-bk/frontend/src/components/UploadLogFile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, Button, Form, Spinner, Alert } from 'react-bootstrap';\nimport { uploadLogFile } from '../api/upload';\n\nconst UploadLogFile = () => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [feedback, setFeedback] = useState(null);\n\n  const handleFileChange = (e) => {\n    setSelectedFile(e.target.files[0]);\n    setFeedback(null);\n  };\n\n  const handleUpload = async () => {\n    if (!selectedFile) return;\n    setUploading(true);\n    const result = await uploadLogFile(selectedFile);\n    setFeedback(result);\n    setUploading(false);\n  };\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Body>\n        <Card.Title>Upload Log File</Card.Title>\n        <Form>\n          <Form.Group controlId=\"formFile\" className=\"mb-3\">\n            <Form.Label>Select .log or .txt file</Form.Label>\n            <Form.Control type=\"file\" accept=\".log,.txt\" onChange={handleFileChange} />\n          </Form.Group>\n          <Button variant=\"primary\" onClick={handleUpload} disabled={!selectedFile || uploading}>\n            {uploading ? <Spinner animation=\"border\" size=\"sm\" /> : 'Upload'}\n          </Button>\n        </Form>\n        {feedback && (\n          <Alert variant={feedback.success ? 'success' : 'danger'} className=\"mt-3\">\n            {feedback.message}\n          </Alert>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default UploadLogFile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}